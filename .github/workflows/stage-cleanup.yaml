name: "Clean up stage"

on:
  workflow_call:
    inputs:
      build_datetime:
        description: "Build datetime, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_timestamp:
        description: "Build timestamp, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_epoch:
        description: "Build epoch, set by the CI/CD pipeline workflow"
        required: true
        type: string
      terraform_version:
        description: "Terraform version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      version:
        description: "Version of the software, set by the CI/CD pipeline workflow"
        required: true
        type: string
      environment:
        description: "the environment to deploy terraform into"
        required: true
        type: string
      invitations_branch:
        description: "Branch of invitations repository to checkout"
        required: false
        type: string
      frontend_branch:
        description: "Branch of frontend repository to checkout"
        required: false
        type: string
      tf_action:
        description: "Terraform action to be performed against target environment"
        default: destroy
        type: string
        required: false

env:
  role-to-assume: ${{ vars.AWS_ROLE_ARN }}
  aws-region: ${{ vars.aws_region }}
  aws-bucket-name: ${{ vars.aws_bucket_name }}
  aws-bucket-key-name: ${{ vars.aws_bucket_key_name }}
  environment: ${{ inputs.environment }}
  frontend-branch: ${{ inputs.frontend_branch }}
  invitations-branch: ${{ inputs.invitations_branch }}
  tf-action: ${{ inputs.tf_action }}

jobs:
  environment-teardown:
    permissions:
      id-token: write # This is required for aws oidc connection
      contents: read # This is required for actions/checkout
    runs-on: ubuntu-latest
    timeout-minutes: 35
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          ref: "${{ env.invitations-branch }}"
          fetch-depth: 0 # Full history is needed to scan all commits
      - name: Install dependency
        run: |
          pip install boto3
          pip install rstr
          pip install random_word
      - name: "Environment teardown"
        uses: ./.github/actions/terraform
        with:
          role-to-assume: ${{ env.role-to-assume }}
          aws-region: ${{ env.aws-region }}
          aws-bucket-name: ${{ env.aws-bucket-name }}
          aws-bucket-key-name: ${{ env.aws-bucket-key-name }}
          environment: ${{ env.environment }}
          invitations-branch: ${{ env.invitations-branch }}
          frontend-branch: ${{ env.frontend-branch }}
          tf-action: ${{ env.tf-action }}
        timeout-minutes: 15
