name: "Post Build stage"

on:
  workflow_call:
    inputs:
      build_datetime:
        description: "Build datetime, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_timestamp:
        description: "Build timestamp, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_epoch:
        description: "Build epoch, set by the CI/CD pipeline workflow"
        required: true
        type: string
      nodejs_version:
        description: "Node.js version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      python_version:
        description: "Python version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      version:
        description: "Version of the software, set by the CI/CD pipeline workflow"
        required: true
        type: string
      environment:
        description: "the environment to deploy terraform into"
        required: true
        type: string
      invitations_branch:
        description: "Branch of invitations repository to checkout"
        required: false
        type: string
    secrets:
      AWS_ACCOUNT_ID:
        required: true

env:
  aws-region: ${{ vars.aws_region }}
  aws-bucket-name: ${{ vars.aws_bucket_name }}
  aws-bucket-key-name: ${{ vars.aws_bucket_key_name }}
  environment: ${{ inputs.environment }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  build:
    permissions:
      id-token: write # This is required for aws oidc connection
      contents: read # This is required for actions/checkout
    runs-on: ubuntu-latest
    timeout-minutes: 35
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          ref: "${{ inputs.invitations_branch }}"
          fetch-depth: 0 # Full history is needed to scan all commits
      - name: "Deploy to Kubernetes"
        uses: ./.github/actions/kubernetes
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.aws-region }}
          aws-bucket-name: ${{ env.aws-bucket-name }}
          aws-bucket-key-name: ${{ env.aws-bucket-key-name }}
          environment: ${{ env.environment }}
          TF_VAR_USERS: ${{ secrets.USERS }}
          TF_VAR_CIS2_SECRET: ${{ secrets.CIS2_SECRET }}
          TF_VAR_NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          AWS_ACCOUNT_ID: ${{ env.AWS_ACCOUNT_ID }}
        timeout-minutes: 15
