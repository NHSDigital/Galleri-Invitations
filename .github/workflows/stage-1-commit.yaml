name: "Commit stage"

on:
  workflow_call:
    inputs:
      build_datetime:
        description: "Build datetime, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_timestamp:
        description: "Build timestamp, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_epoch:
        description: "Build epoch, set by the CI/CD pipeline workflow"
        required: true
        type: string
      nodejs_version:
        description: "Node.js version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      python_version:
        description: "Python version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      terraform_version:
        description: "Terraform version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      version:
        description: "Version of the software, set by the CI/CD pipeline workflow"
        required: true
        type: string
      invitations_branch:
        description: "Branch of invitations repository to checkout"
        required: false
        type: string

jobs:
  scan-secrets:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    name: "Scan secrets"
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          ref: "${{ inputs.invitations_branch }}"
          fetch-depth: 0 # Full history is needed to scan all commits
      - name: "Scan secrets"
        uses: ./.github/actions/scan-secrets
  check-file-format:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    name: "Check file format"
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          ref: "${{ inputs.invitations_branch }}"
          fetch-depth: 0 # Full history is needed to scan all commits
      - name: "Check file format"
        uses: ./.github/actions/check-file-format
  check-markdown-format:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    name: "Check markdown format"
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          ref: "${{ inputs.invitations_branch }}"
          fetch-depth: 0 # Full history is needed to scan all commits
      - name: "Check markdown format"
        uses: ./.github/actions/check-markdown-format
  check-terraform-format:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    name: "Check Terraform format"
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          ref: "${{ inputs.invitations_branch }}"
      - name: "Check Terraform format"
        uses: ./.github/actions/check-terraform-format
  cloc-repository:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 2
    name: "Count lines of code"
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          ref: "${{ inputs.invitations_branch }}"
      - name: "Count lines of code"
        uses: ./.github/actions/cloc-repository
        with:
          build_datetime: "${{ inputs.build_datetime }}"
          build_timestamp: "${{ inputs.build_timestamp }}"
          idp_aws_report_upload_account_id: "${{ secrets.IDP_AWS_REPORT_UPLOAD_ACCOUNT_ID }}"
          idp_aws_report_upload_region: "${{ secrets.IDP_AWS_REPORT_UPLOAD_REGION }}"
          idp_aws_report_upload_role_name: "${{ secrets.IDP_AWS_REPORT_UPLOAD_ROLE_NAME }}"
          idp_aws_report_upload_bucket_endpoint: "${{ secrets.IDP_AWS_REPORT_UPLOAD_BUCKET_ENDPOINT }}"
  scan-dependencies:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 2
    name: "Scan dependencies"
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          ref: "${{ inputs.invitations_branch }}"
      - name: "Scan dependencies"
        uses: ./.github/actions/scan-dependencies
        with:
          build_datetime: "${{ inputs.build_datetime }}"
          build_timestamp: "${{ inputs.build_timestamp }}"
          idp_aws_report_upload_account_id: "${{ secrets.IDP_AWS_REPORT_UPLOAD_ACCOUNT_ID }}"
          idp_aws_report_upload_region: "${{ secrets.IDP_AWS_REPORT_UPLOAD_REGION }}"
          idp_aws_report_upload_role_name: "${{ secrets.IDP_AWS_REPORT_UPLOAD_ROLE_NAME }}"
          idp_aws_report_upload_bucket_endpoint: "${{ secrets.IDP_AWS_REPORT_UPLOAD_BUCKET_ENDPOINT }}"
  perform-static-analysis:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 5
    name: "Perform unit tests and static analysis"
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history is needed to improving relevancy of reporting
      - name: "Perform static analysis"
        uses: ./.github/actions/perform-static-analysis
        with:
          sonar_organisation_key: "${{ vars.SONAR_ORGANISATION_KEY }}"
          sonar_project_key: "${{ vars.SONAR_PROJECT_KEY }}"
          sonar_token: "${{ secrets.SONAR_TOKEN }}"
