name: "Terraform action"
description: "Build infrastructure"

runs:
  using: "composite"
  steps:
    - name: Git checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ env.branch }}
        path: "Galleri-Invitations"

    - name: Checkout frontend
      uses: actions/checkout@v4
      with:
        path: "Galleri-Frontend"
        repository: NHSDigital/Galleri-Frontend
        ref: main

    - name: Configure AWS credentials from AWS account
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ env.role-to-assume }}
        aws-region: ${{ env.aws-region }}
        role-session-name: GitHub-OIDC-TERRAFORM

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Terraform fmt
      id: fmt
      shell: bash
      run: |
        cd ./terraform
        terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      shell: bash
      run: |
        cd ./terraform
        terraform init -backend-config="bucket=${{ env.aws-bucket-name }}" -backend-config="key=${{ env.aws-bucket-key-name }}" -backend-config="region=${{ env.aws-region }}"

    - name: Terraform workspace
      id: workspace
      shell: bash
      run: |
        cd ./terraform
        if [ "${{ env.environment }}" != "dev" ]; then
        terraform workspace select ${{ env.environment }}
        fi

    - name: Terraform Validate
      id: validate
      shell: bash
      run: |
        cd ./terraform
        terraform validate -no-color

    - name: Terraform Plan
      id: plan
      shell: bash
      run: |
        cd ./terraform
        terraform plan -no-color -var-file=environment/${{ env.environment }}/${{ env.environment }}.tfvars

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      shell: bash
      run: |
        echo Terraform Plan Status has failed
        exit 1

    - name: Terraform Apply
      shell: bash
      run: |
        cd ./terraform
        npm install --prefix src/dataFilterLambda
        npm install --prefix src/lsoaLoaderLambda
        npm install --prefix src/clinicIcbListLambda
        npm install --prefix src/clinicInformationLambda
        npm install --prefix src/clinicSummaryListLambda
        npm install --prefix src/invitationParametersLambda
        npm install --prefix src/invitationParametersPutForecastUptakeLambda
        npm install --prefix src/invitationParametersPutQuintilesLambda
        npm install --prefix src/participatingIcbListLambda
        npm install --prefix src/targetFillToPercentageLambda
        npm install --prefix src/targetFillToPercentagePutLambda
        npm install --prefix src/getLsoaInRangeLambda
        npm install --prefix src/getLsoaParticipantsLambda
        terraform apply -auto-approve -input=false -var-file=environment/${{ env.environment }}/${{ env.environment }}.tfvars
